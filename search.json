{"Structs/Option.html#/s:16ICInputAccessory6OptionV8optionalACyxGyFZ":{"name":"optional()","abstract":"<p>Returns an option that displays the optional value of an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OptionDescriptive.html\">OptionDescriptive</a></code> type.</p>","parent_name":"Option"},"Structs/Option.html#/s:16ICInputAccessory6OptionVACyxGxcfc":{"name":"init(_:)","abstract":"<p>Returns an initialized option with an instance of an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OptionDescriptive.html\">OptionDescriptive</a></code> type.</p>","parent_name":"Option"},"Structs/Option.html#/s:16ICInputAccessory6OptionV5titleSSv":{"name":"title","abstract":"<p>Conformance to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OptionDescriptive.html\">OptionDescriptive</a></code>.</p>","parent_name":"Option"},"Structs/Option.html#/s:16ICInputAccessory6OptionV5valuexSgv":{"name":"value","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OptionDescriptive.html\">OptionDescriptive</a></code> value of the option. Returns <code>nil</code> when it&rsquo;s the <code>optional</code> placeholder.</p>","parent_name":"Option"},"Structs/Option.html#/s:16ICInputAccessory6OptionV2eeoiSbACyxG_AEtFZ":{"name":"==(_:_:)","abstract":"<p>Returns true when two options&rsquo; values are equal.</p>","parent_name":"Option"},"Structs/Option.html":{"name":"Option","abstract":"<p>An option struct that carries the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/OptionDescriptive.html\">OptionDescriptive</a></code></p>"},"Protocols/OptionDescriptive.html#/s:16ICInputAccessory17OptionDescriptiveP5titleSSv":{"name":"title","abstract":"<p>The text for the row in the <code>UIPickerView</code>.</p>","parent_name":"OptionDescriptive"},"Protocols/OptionDescriptive.html#/s:16ICInputAccessory17OptionDescriptiveP21titleForOptionalValueSSvZ":{"name":"titleForOptionalValue","abstract":"<p>The text for a placeholder row when the picker selection is optional.</p>","parent_name":"OptionDescriptive"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenFieldDidBeginEditing:":{"name":"tokenFieldDidBeginEditing(_:)","abstract":"<p>Tells the delegate that editing began for the token field.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenFieldDidEndEditing:":{"name":"tokenFieldDidEndEditing(_:)","abstract":"<p>Tells the delegate that editing stopped for the token field.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenFieldWillReturn:":{"name":"tokenFieldWillReturn(_:)","abstract":"<p>Tells the delegate that the token field will process the pressing of the return button.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenField:didChangeInputText:":{"name":"tokenField(_:didChangeInputText:)","abstract":"<p>Tells the delegate the input text is changed.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenField:shouldCompleteText:":{"name":"tokenField(_:shouldCompleteText:)","abstract":"<p>Asks the delegate if the text should become a token in the token field.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenField:didCompleteText:":{"name":"tokenField(_:didCompleteText:)","abstract":"<p>Tells the delegate that the text becomes a token in the token field.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenField:didDeleteText:atIndex:":{"name":"tokenField(_:didDeleteText:atIndex:)","abstract":"<p>Tells the delegate that the token at certain index is removed from the token field.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html#/c:@M@ICInputAccessory@objc(pl)ICTokenFieldDelegate(im)tokenField:subsequentDelimiterForCompletedText:":{"name":"tokenField(_:subsequentDelimiterForCompletedText:)","abstract":"<p>Asks the delegate for the subsequent delimiter string for a completed text in the token field.</p>","parent_name":"ICTokenFieldDelegate"},"Protocols/ICTokenFieldDelegate.html":{"name":"ICTokenFieldDelegate","abstract":"<p>The protocol defines the messages sent to a delegate. All the methods are optional.</p>"},"Protocols/OptionDescriptive.html":{"name":"OptionDescriptive","abstract":"<p>The protocol defines the required variables to be displayed in a <code>UIPickerView</code> via <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/OptionPickerControl.html\">OptionPickerControl</a></code>.</p>"},"Classes/OptionPickerControl.html#/s:16ICInputAccessory19OptionPickerControlCACyxGycfc":{"name":"init()","abstract":"<p>Returns an initialized <code>OptionPickerControl</code>.</p>","parent_name":"OptionPickerControl"},"Classes/OptionPickerControl.html#/s:16ICInputAccessory19OptionPickerControlCACyxGSgSo7NSCoderC5coder_tcfc":{"name":"init(coder:)","abstract":"<p>Not supported. <code>OptionPickerControl</code> is not compatible with storyboards.</p>","parent_name":"OptionPickerControl"},"Classes/OptionPickerControl.html#/s:16ICInputAccessory19OptionPickerControlC7optionsSayAA0C0VyxGGv":{"name":"options","abstract":"<p>Options that shows in the <code>UIPickerView</code>.</p>","parent_name":"OptionPickerControl"},"Classes/OptionPickerControl.html#/s:16ICInputAccessory19OptionPickerControlC08selectedC0AA0C0VyxGv":{"name":"selectedOption","abstract":"<p>The currently selected item in the options.</p>","parent_name":"OptionPickerControl"},"Classes/OptionPickerControl.html#/s:16ICInputAccessory19OptionPickerControlC6pickerSo12UIPickerViewCv":{"name":"picker","abstract":"<p>A reference to the displayed <code>UIPickerView</code> for customization.</p>","parent_name":"OptionPickerControl"},"Classes/OptionPickerControl.html#/s:16ICInputAccessory19OptionPickerControlC18numberOfComponentsSiSo12UIPickerViewC2in_tF":{"name":"numberOfComponents(in:)","abstract":"<p>Currently <code>OptionPickerControl</code> only supports one component.</p>","parent_name":"OptionPickerControl"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)delegate":{"name":"delegate","abstract":"<p>The receiver&rsquo;s delegate.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)delimiters":{"name":"delimiters","abstract":"<p>Characters that completes a new token, defaults are whitespace and commas.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)texts":{"name":"texts","abstract":"<p>Texts of each created token.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)icon":{"name":"icon","abstract":"<p>The image on the left of text field.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)textField":{"name":"textField","abstract":"<p>The text field that handles text inputs.","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)placeholder":{"name":"placeholder","abstract":"<p>The placeholder with the default color and font.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)attributedPlaceholder":{"name":"attributedPlaceholder","abstract":"<p>The placeholder with customized attributes.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)normalTokenAttributes":{"name":"normalTokenAttributes","abstract":"<p>Customized attributes for tokens in the normal state, e.g. <code>NSFontAttributeName</code> and <code>NSForegroundColorAttributeName</code>.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)highlightedTokenAttributes":{"name":"highlightedTokenAttributes","abstract":"<p>Customized attributes for tokens in the highlighted state.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(py)tintColor":{"name":"tintColor","abstract":"<p>The tint color of icon image and text field.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initializes and returns a newly allocated view object with the specified frame rectangle.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Returns an object initialized from data in a given unarchiver.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(im)completeCurrentInputText":{"name":"completeCurrentInputText()","abstract":"<p>Creates a token with the current input text.</p>","parent_name":"ICTokenField"},"Classes/ICTokenField.html#/c:@M@ICInputAccessory@objc(cs)ICTokenField(im)resetTokens":{"name":"resetTokens()","abstract":"<p>Removes the input text and all displayed tokens.</p>","parent_name":"ICTokenField"},"Classes/ICKeyboardDismissTextField.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissTextField(py)keyboardAccessoryView":{"name":"keyboardAccessoryView","abstract":"<p>The custom input accessory view with a button to dismiss keyboard.</p>","parent_name":"ICKeyboardDismissTextField"},"Classes/ICKeyboardDismissTextField.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissTextField(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initializes and returns a newly allocated view object with the specified frame rectangle.</p>","parent_name":"ICKeyboardDismissTextField"},"Classes/ICKeyboardDismissTextField.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissTextField(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Returns an object initialized from data in a given unarchiver.</p>","parent_name":"ICKeyboardDismissTextField"},"Classes/ICKeyboardDismissAccessoryView.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissAccessoryView(py)buttonColor":{"name":"buttonColor","abstract":"<p>The background color of the button to dismiss keyboard.</p>","parent_name":"ICKeyboardDismissAccessoryView"},"Classes/ICKeyboardDismissAccessoryView.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissAccessoryView(py)dismissButton":{"name":"dismissButton","abstract":"<p>The button to dismiss keyboard.</p>","parent_name":"ICKeyboardDismissAccessoryView"},"Classes/ICKeyboardDismissAccessoryView.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissAccessoryView(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initializes and returns a newly allocated view object with the specified frame rectangle.</p>","parent_name":"ICKeyboardDismissAccessoryView"},"Classes/ICKeyboardDismissAccessoryView.html#/c:@M@ICInputAccessory@objc(cs)ICKeyboardDismissAccessoryView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Returns an object initialized from data in a given unarchiver.</p>","parent_name":"ICKeyboardDismissAccessoryView"},"Classes/ICKeyboardDismissAccessoryView.html":{"name":"ICKeyboardDismissAccessoryView","abstract":"<p>A customized keyboard accessory view with a dismiss button.</p>"},"Classes/ICKeyboardDismissTextField.html":{"name":"ICKeyboardDismissTextField","abstract":"<p>A text field that has a button to dismiss keyboard on the input accessory view.</p>"},"Classes/ICTokenField.html":{"name":"ICTokenField","abstract":"<p>A text field that groups input texts with delimiters.</p>"},"Classes/OptionPickerControl.html":{"name":"OptionPickerControl","abstract":"<p>A <code>UIControl</code> that displays a <code>UIPickerView</code> and notifies changed selection and via <code>UIControlEvents</code> <code>.valueChanged</code>.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}
